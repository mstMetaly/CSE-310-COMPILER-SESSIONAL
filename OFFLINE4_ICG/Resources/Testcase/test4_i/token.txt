<INT, int>
<ID, a>
<COMMA, ,>
<ID, b>
<COMMA, ,>
<ID, c>
<SEMICOLON, ;>
<VOID, void>
<ID, func_a>
<LPAREN, (>
<RPAREN, )>
<LCURL, {>
<ID, a>
<ASSIGNOP, =>
<CONST_INT, 7>
<SEMICOLON, ;>
<RCURL, }>
<INT, int>
<ID, foo>
<LPAREN, (>
<INT, int>
<ID, a>
<RPAREN, )>
<LCURL, {>
<ID, a>
<ASSIGNOP, =>
<ID, a>
<ADDOP, +>
<CONST_INT, 3>
<SEMICOLON, ;>
<RETURN, return>
<ID, a>
<SEMICOLON, ;>
<RCURL, }>
<INT, int>
<ID, bar>
<LPAREN, (>
<INT, int>
<ID, a>
<COMMA, ,>
<INT, int>
<ID, b>
<RPAREN, )>
<LCURL, {>
<ID, c>
<ASSIGNOP, =>
<CONST_INT, 4>
<MULOP, *>
<ID, a>
<ADDOP, +>
<CONST_INT, 2>
<MULOP, *>
<ID, b>
<SEMICOLON, ;>
<RETURN, return>
<ID, c>
<SEMICOLON, ;>
<RCURL, }>
<INT, int>
<ID, main>
<LPAREN, (>
<RPAREN, )>
<LCURL, {>
<INT, int>
<ID, i>
<COMMA, ,>
<ID, j>
<COMMA, ,>
<ID, k>
<COMMA, ,>
<ID, l>
<SEMICOLON, ;>
<ID, i>
<ASSIGNOP, =>
<CONST_INT, 5>
<SEMICOLON, ;>
<ID, j>
<ASSIGNOP, =>
<CONST_INT, 6>
<SEMICOLON, ;>
<ID, func_a>
<LPAREN, (>
<RPAREN, )>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, a>
<RPAREN, )>
<SEMICOLON, ;>
<ID, k>
<ASSIGNOP, =>
<ID, foo>
<LPAREN, (>
<ID, i>
<RPAREN, )>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, k>
<RPAREN, )>
<SEMICOLON, ;>
<ID, l>
<ASSIGNOP, =>
<ID, bar>
<LPAREN, (>
<ID, i>
<COMMA, ,>
<ID, j>
<RPAREN, )>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, l>
<RPAREN, )>
<SEMICOLON, ;>
<ID, j>
<ASSIGNOP, =>
<CONST_INT, 6>
<MULOP, *>
<ID, bar>
<LPAREN, (>
<ID, i>
<COMMA, ,>
<ID, j>
<RPAREN, )>
<ADDOP, +>
<CONST_INT, 2>
<ADDOP, ->
<CONST_INT, 3>
<MULOP, *>
<ID, foo>
<LPAREN, (>
<ID, i>
<RPAREN, )>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, j>
<RPAREN, )>
<SEMICOLON, ;>
<RETURN, return>
<CONST_INT, 0>
<SEMICOLON, ;>
<RCURL, }>
