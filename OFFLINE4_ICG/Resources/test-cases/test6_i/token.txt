<INT, int>
<ID, w>
<LSQUARE, [>
<CONST_INT, 10>
<RSQUARE, ]>
<SEMICOLON, ;>
<INT, int>
<ID, main>
<LPAREN, (>
<RPAREN, )>
<LCURL, {>
<INT, int>
<ID, i>
<SEMICOLON, ;>
<INT, int>
<ID, x>
<LSQUARE, [>
<CONST_INT, 10>
<RSQUARE, ]>
<SEMICOLON, ;>
<ID, w>
<LSQUARE, [>
<CONST_INT, 0>
<RSQUARE, ]>
<ASSIGNOP, =>
<ADDOP, ->
<CONST_INT, 2>
<SEMICOLON, ;>
<ID, x>
<LSQUARE, [>
<CONST_INT, 0>
<RSQUARE, ]>
<ASSIGNOP, =>
<ID, w>
<LSQUARE, [>
<CONST_INT, 0>
<RSQUARE, ]>
<SEMICOLON, ;>
<ID, i>
<ASSIGNOP, =>
<ID, x>
<LSQUARE, [>
<CONST_INT, 0>
<RSQUARE, ]>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, i>
<RPAREN, )>
<SEMICOLON, ;>
<ID, x>
<LSQUARE, [>
<CONST_INT, 1>
<RSQUARE, ]>
<ASSIGNOP, =>
<ID, w>
<LSQUARE, [>
<CONST_INT, 0>
<RSQUARE, ]>
<INCOP, ++>
<SEMICOLON, ;>
<ID, i>
<ASSIGNOP, =>
<ID, x>
<LSQUARE, [>
<CONST_INT, 1>
<RSQUARE, ]>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, i>
<RPAREN, )>
<SEMICOLON, ;>
<ID, i>
<ASSIGNOP, =>
<ID, w>
<LSQUARE, [>
<CONST_INT, 0>
<RSQUARE, ]>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, i>
<RPAREN, )>
<SEMICOLON, ;>
<ID, i>
<ASSIGNOP, =>
<ID, i>
<ADDOP, +>
<CONST_INT, 0>
<SEMICOLON, ;>
<ID, i>
<ASSIGNOP, =>
<ID, i>
<ADDOP, ->
<CONST_INT, 0>
<SEMICOLON, ;>
<ID, i>
<ASSIGNOP, =>
<ID, i>
<MULOP, *>
<CONST_INT, 1>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, i>
<RPAREN, )>
<SEMICOLON, ;>
<IF, if>
<LPAREN, (>
<LPAREN, (>
<ID, i>
<RELOP, >>
<CONST_INT, 0>
<LOGICOP, &&>
<ID, i>
<RELOP, <>
<CONST_INT, 10>
<RPAREN, )>
<LOGICOP, ||>
<LPAREN, (>
<ID, i>
<RELOP, <>
<CONST_INT, 0>
<LOGICOP, &&>
<ID, i>
<RELOP, >>
<ADDOP, ->
<CONST_INT, 10>
<RPAREN, )>
<RPAREN, )>
<ID, i>
<ASSIGNOP, =>
<CONST_INT, 100>
<SEMICOLON, ;>
<ELSE, else>
<ID, i>
<ASSIGNOP, =>
<CONST_INT, 200>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, i>
<RPAREN, )>
<SEMICOLON, ;>
<RETURN, return>
<CONST_INT, 0>
<SEMICOLON, ;>
<RCURL, }>
