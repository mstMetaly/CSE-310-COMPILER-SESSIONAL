<INT, int>
<ID, main>
<LPAREN, (>
<RPAREN, )>
<LCURL, {>
<INT, int>
<ID, i>
<COMMA, ,>
<ID, j>
<COMMA, ,>
<ID, k>
<SEMICOLON, ;>
<ID, i>
<ASSIGNOP, =>
<CONST_INT, 3>
<SEMICOLON, ;>
<ID, j>
<ASSIGNOP, =>
<CONST_INT, 8>
<SEMICOLON, ;>
<ID, k>
<ASSIGNOP, =>
<CONST_INT, 6>
<SEMICOLON, ;>
<IF, if>
<LPAREN, (>
<ID, i>
<RELOP, ==>
<CONST_INT, 3>
<RPAREN, )>
<LCURL, {>
<PRINTLN, println>
<LPAREN, (>
<ID, j>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<IF, if>
<LPAREN, (>
<ID, j>
<RELOP, <>
<CONST_INT, 8>
<RPAREN, )>
<LCURL, {>
<PRINTLN, println>
<LPAREN, (>
<ID, i>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<ELSE, else>
<LCURL, {>
<PRINTLN, println>
<LPAREN, (>
<ID, k>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<IF, if>
<LPAREN, (>
<ID, k>
<RELOP, !=>
<CONST_INT, 6>
<RPAREN, )>
<LCURL, {>
<PRINTLN, println>
<LPAREN, (>
<ID, k>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<ELSE, else>
<IF, if>
<LPAREN, (>
<ID, j>
<RELOP, >>
<CONST_INT, 8>
<RPAREN, )>
<LCURL, {>
<PRINTLN, println>
<LPAREN, (>
<ID, j>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<ELSE, else>
<IF, if>
<LPAREN, (>
<ID, i>
<RELOP, <>
<CONST_INT, 5>
<RPAREN, )>
<LCURL, {>
<PRINTLN, println>
<LPAREN, (>
<ID, i>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<ELSE, else>
<LCURL, {>
<ID, k>
<ASSIGNOP, =>
<CONST_INT, 0>
<SEMICOLON, ;>
<PRINTLN, println>
<LPAREN, (>
<ID, k>
<RPAREN, )>
<SEMICOLON, ;>
<RCURL, }>
<RETURN, return>
<CONST_INT, 0>
<SEMICOLON, ;>
<RCURL, }>
